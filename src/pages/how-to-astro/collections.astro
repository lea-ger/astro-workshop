---
import Layout from "@/layouts/SlideLayout.astro";
import { Code } from 'astro:components';
---

<Layout next="/how-to-astro/ssr" prev="/how-to-astro/image" slideId="16">
    <h1>Content Collections</h1>

    <p>Content Collections bieten eine <strong>typsichere Möglichkeit</strong>, Markdown, MDX und andere Inhalte zu organisieren und abzufragen.</p>

    <div class="grid grid-cols-2 gap-8 mt-8">
        <div>
            <h3>Einrichtung</h3>
            <Code code={`
// src/content/config.ts
import { defineCollection, z } from 'astro:content';

// Schema für Blog-Beiträge definieren
const blogCollection = defineCollection({
  schema: z.object({
    title: z.string(),
    date: z.date(),
    author: z.string(),
    tags: z.array(z.string()).optional(),
    draft: z.boolean().default(false),
  }),
});

// Schema für Produkte definieren
const productsCollection = defineCollection({
  schema: z.object({
    name: z.string(),
    price: z.number(),
    image: z.string(),
  }),
});

// Alle Collections exportieren
export const collections = {
  'blog': blogCollection,
  'products': productsCollection,
};
            `} lang="typescript" />
            
            <p class="mt-4">Astro verwendet <a href="https://zod.dev/" target="_blank">Zod</a> für die Schema-Validierung, ähnlich wie bei Prisma oder tRPC.</p>
        </div>
        <div>
            <h3>Verwendung in Komponenten</h3>
            <Code code={`
---
// Importieren der Hilfsfunktionen
import { getCollection, getEntry } from 'astro:content';

// Alle Blog-Beiträge abrufen (typsicher!)
const allBlogPosts = await getCollection('blog');

// Nur veröffentlichte Beiträge filtern
const publishedPosts = allBlogPosts.filter(
  post => !post.data.draft
);

// Einzelnen Eintrag abrufen
const featuredPost = await getEntry('blog', 'featured-post');
---

<h2>Neueste Beiträge</h2>
<ul>
  {publishedPosts.map(post => (
    <li>
      <a href={`/blog/${post.slug}`}>
        {post.data.title}
      </a>
      <time>{post.data.date.toLocaleDateString()}</time>
    </li>
  ))}
</ul>
            `} lang="astro" />
            
            <h3 class="mt-6">Vorteile</h3>
            <ul>
                <li><strong>Typsicherheit:</strong> TypeScript-Integration mit Zod-Schemas</li>
                <li><strong>Automatische Validierung:</strong> Fehler werden beim Build erkannt</li>
                <li><strong>Organisierte Struktur:</strong> Klare Trennung von Inhalten und Code</li>
                <li><strong>Leistung:</strong> Optimierte Abfragen und Caching</li>
                <li><strong>Entwicklererfahrung:</strong> Bessere Autovervollständigung und Fehlerprüfung</li>
            </ul>
        </div>
    </div>
</Layout>
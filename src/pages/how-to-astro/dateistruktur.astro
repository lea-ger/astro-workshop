---
import Layout from "@/layouts/SlideLayout.astro";
import {Code} from 'astro:components';
---

<Layout next="/how-to-astro/routing" prev="/how-to-astro/index" slideId="11">
    <h1>Filesystem</h1>

    <p>Astro folgt dem Prinzip der <strong>Dateibasierte Struktur</strong> - die Organisation deiner Dateien bestimmt
        die Struktur deiner Website.</p>

    <div class="grid grid-cols-2 gap-8 mt-8">
        <div>
            <h3>Grundlegende Projektstruktur</h3>
            <Code code={`
/
├── public/                              # Statische Assets
│   └── favicon.svg
├── src/                                  # Quellcode
│   ├── components/                       # UI-Komponenten
│   ├── layouts/                      # Layout-Komponenten
│   │   └── Layout.astro
│   └── styles/                        # CSS-Dateien
│   └── pages/                        # Seiten & Routen
│       └── how-to-astro/
│            └── dateistruktur.astro
│       └── index.astro
├── astro.config.mjs                # Konfiguration
└── package.json
            `} lang="text"/>
        </div>
        <div data-step>
            <h3>Wichtige Verzeichnisse</h3>
            <ul>
                <li data-step><strong>public/</strong> - Dateien werden unverändert kopiert</li>
                <li data-step><strong>src/pages/</strong> - Definiert Routen und Seiten</li>
                <li data-step><strong>src/components/</strong> - Wiederverwendbare UI-Teile</li>
                <li data-step><strong>src/layouts/</strong> - Seitenstrukturen</li>
                <li data-step><strong>src/content/</strong> - Für Content Collections</li>
            </ul>
            <p class="mt-4" data-step>Ähnlich wie bei anderen modernen Frameworks (Next.js, SvelteKit) folgt Astro Konventionen
                statt Konfiguration.</p>
        </div>
    </div>
</Layout>
---
import Layout from "@/layouts/SlideLayout.astro";
import { Code } from 'astro:components';
---

<Layout next="/how-to-astro/ssr/node-adapter" prev="/how-to-astro/collections" slideId="17">
    <h1>Server-Side Rendering (SSR)</h1>

    <p>Astro unterstützt <strong>serverseitiges Rendering</strong> für dynamische Inhalte und geschützte Routen, zusätzlich zur statischen Generierung.</p>

    <div class="grid grid-cols-2 gap-8 mt-8">
        <div>
            <h3>SSR aktivieren</h3>
            <Code code={`
// astro.config.mjs
import { defineConfig } from 'astro/config';
import node from '@astrojs/node';

export default defineConfig({
  output: 'server',  // 'static' (Standard) oder 'server'
  
  adapter: node({
    mode: 'standalone' // oder 'middleware'
  }),
});
            `} lang="javascript" />
            
            <h3 class="mt-6">Dynamische Routen mit SSR</h3>
            <Code code={`
// src/pages/[...slug].astro
---
// Keine getStaticPaths() nötig bei SSR!
const { slug } = Astro.params;

// Zugriff auf Request-Daten
const userAgent = Astro.request.headers.get('user-agent');
const referer = Astro.request.headers.get('referer');
const ip = Astro.clientAddress;

// Cookies lesen/setzen
const cookies = Astro.cookies;
const theme = cookies.get('theme')?.value || 'light';
cookies.set('visited', 'true', { path: '/' });
---

<h1>Dynamische Seite: {slug}</h1>
<p>Dein Theme: {theme}</p>
            `} lang="astro" />
        </div>
        <div>
            <h3>Anwendungsfälle für SSR</h3>
            <ul>
                <li><strong>Dynamische Daten:</strong> Inhalte, die sich häufig ändern</li>
                <li><strong>Personalisierung:</strong> Benutzerspezifische Inhalte</li>
                <li><strong>Authentifizierung:</strong> Geschützte Routen und Benutzerkonten</li>
                <li><strong>Formulare:</strong> Serverseitige Formularverarbeitung</li>
                <li><strong>Große Websites:</strong> Zu viele Seiten für vollständige SSG</li>
            </ul>
            
            <h3 class="mt-6">Redirect & Response API</h3>
            <Code code={`
// Umleitung
if (!isLoggedIn) {
  return Astro.redirect('/login');
}

// Benutzerdefinierte Response
if (Astro.request.method === 'POST') {
  const data = await Astro.request.formData();
  
  // Daten verarbeiten...
  
  return new Response(JSON.stringify({ success: true }), {
    status: 200,
    headers: {
      'Content-Type': 'application/json'
    }
  });
}
            `} lang="javascript" />
            
            <p class="mt-4">Ähnlich zu Next.js oder Remix, aber mit Astros Komponenten-Modell und optionalem Hybrid-Rendering.</p>
        </div>
    </div>
</Layout>